#!/usr/bin/env node
//github.com/GMTurbo/smasher/blob/master/smash.js
function printHelp(){var e=[["smash".red," --break".green," path/file.txt".cyan," --count".green," 5".cyan].join(" "),["smash".red," --join".green," path/file.txt".cyan,"<-- file name and extention must match chunks".grey].join(" ")];console.log(e.join("\n"))}var fs=require("fs"),path=require("path"),argv=require("minimist")(process.argv.slice(2)),StreamBouncer=require("stream-bouncer"),mkdirp=require("mkdirp"),colors=require("colors"),_bouncer=new StreamBouncer({streamsPerTick:1,poll:100}),createPath=function(e,r){var n=fs.statSync(e).isDirectory?e:path.dirname(r);return mkdirp.sync(n),n+"/"+path.basename(r)},_checkForOut=function(e){return argv.output?argv.output+"/":path.dirname(e)},_getOutputPath=function(e){var r=_checkForOut(e);return"/"!=r?r:(mkdirp.sync(path.dirname(e)+"/output/"),path.dirname(e)+"/output/")},_break=function(e,r){var n,t=require("chunking-streams"),a=t.SizeChunker,i=new a({chunkSize:fs.statSync(e).size/r,flushTail:!0});i.on("chunkStart",function(r,t){mkdirp.sync(_getOutputPath(e)),n=fs.createWriteStream(_getOutputPath(e)+"/"+path.basename(e)+"."+r),t()}),i.on("chunkEnd",function(e,r){n.end(),0==fs.statSync(n.path).size&&fs.unlink(n.path,function(e){e&&console.log(e)}),r()}),i.on("data",function(e){e.data.length&&n.write(e.data)}),_bouncer.push({source:fs.createReadStream(e),destination:i})},_join=function(e){var r=(require("random-access-file"),require("lodash")),n=function(e){var n,t=function(){if(n)return n;var t=fs.readdirSync(path.dirname(e));return t=r.filter(t,function(r){return-1!=r.indexOf(path.basename(e)+".")}),n=t.length||0};return t},t=n(e),a=createPath(_checkForOut(e),e);if(fs.existsSync(a))return void console.log(a+" already exists on disk : (");for(var i=0;i<t();i++){var o=e+"."+i;fs.existsSync(o)?_bouncer.push({source:fs.createReadStream(o),destination:fs.createWriteStream(a,{flags:"a"})}):console.log(o+" missing :/")}};argv.break=argv.break,argv.join=argv.join,argv.break?_break(argv.break,argv.count||2):argv.join?_join(argv.join):printHelp();
